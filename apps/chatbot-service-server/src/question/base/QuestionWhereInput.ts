/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { HintListRelationFilter } from "../../hint/base/HintListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumQuestionStatus } from "./EnumQuestionStatus";
import { SuggestionListRelationFilter } from "../../suggestion/base/SuggestionListRelationFilter";
import { EnumQuestionTypeField } from "./EnumQuestionTypeField";

@InputType()
class QuestionWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  content?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => HintListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HintListRelationFilter)
  @IsOptional()
  @Field(() => HintListRelationFilter, {
    nullable: true,
  })
  hints?: HintListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumQuestionStatus,
  })
  @IsEnum(EnumQuestionStatus)
  @IsOptional()
  @Field(() => EnumQuestionStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: () => SuggestionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SuggestionListRelationFilter)
  @IsOptional()
  @Field(() => SuggestionListRelationFilter, {
    nullable: true,
  })
  suggestions?: SuggestionListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumQuestionTypeField,
  })
  @IsEnum(EnumQuestionTypeField)
  @IsOptional()
  @Field(() => EnumQuestionTypeField, {
    nullable: true,
  })
  typeField?: "Option1";
}

export { QuestionWhereInput as QuestionWhereInput };
